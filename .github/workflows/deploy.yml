# GitHub Actions 自动部署配置
# 当推送到 main 分支时，自动部署到 Vercel 和 Railway

name: Deploy to Production

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # 部署前端到 Vercel
  deploy-frontend:
    name: Deploy Frontend to Vercel
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: |
          cd frontend
          npm ci

      - name: Build frontend
        run: |
          cd frontend
          npm run build
        env:
          REACT_APP_API_URL: ${{ secrets.REACT_APP_API_URL }}

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./frontend
          vercel-args: '--prod'

  # 测试后端
  test-backend:
    name: Test Backend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip'
          cache-dependency-path: backend/requirements.txt

      - name: Install dependencies
        run: |
          cd backend
          pip install -r requirements.txt

      - name: Run tests
        run: |
          cd backend
          # 如果有测试文件，运行测试
          # pytest tests/

      - name: Check code style
        run: |
          cd backend
          pip install black flake8
          black --check .
          flake8 .

  # 部署后端（如果使用 Railway CLI）
  # 注意: Railway 通常通过 GitHub 集成自动部署，此步骤是可选的
  deploy-backend:
    name: Deploy Backend
    runs-on: ubuntu-latest
    needs: test-backend
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to Railway
        run: |
          echo "Railway 会通过 GitHub 集成自动部署"
          echo "如需使用 CLI，请配置 RAILWAY_TOKEN"
          # npm i -g @railway/cli
          # railway up --service backend
        # env:
        #   RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}

# 配置说明:
# 1. 在 GitHub 仓库设置中添加 Secrets:
#    - VERCEL_TOKEN: Vercel API Token
#    - VERCEL_ORG_ID: Vercel 组织 ID
#    - VERCEL_PROJECT_ID: Vercel 项目 ID
#    - REACT_APP_API_URL: 后端 API 地址
#    - RAILWAY_TOKEN: Railway API Token (可选)
#
# 2. 获取 Vercel 信息:
#    - Token: https://vercel.com/account/tokens
#    - Org ID & Project ID: 运行 `vercel link` 后查看 .vercel/project.json
#
# 3. 获取 Railway Token:
#    - https://railway.app/account/tokens

